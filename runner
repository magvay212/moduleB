Для установки и настройки двух GitLab Runner'ов на ВМ worker1 и worker2 в режиме Docker, следуйте инструкциям ниже:

1. Установка GitLab Runner'а на ВМ worker1 и worker2:
   - Для Ubuntu/Debian:
     
     sudo apt-get install gitlab-runner
     
   - Для CentOS/Fedora:
     
     sudo yum install gitlab-runner
     

2. Зарегистрируйте каждый экземпляр GitLab Runner'а:
   - Запустите команду на ВМ worker1:
     
     sudo gitlab-runner register
     
   - Запустите команду на ВМ worker2:
     
     sudo gitlab-runner register
     

   При регистрации GitLab Runner'а, укажите следующую информацию:
   - URL GitLab: Укажите URL вашего GitLab сервера.
   - Токен регистрации: Получите токен регистрации на GitLab в разделе "Settings -> CI/CD -> Runners".
   - Имя раннера: Укажите имя для раннера, например, "Docker Runner on worker1" для ВМ worker1 и "Docker Runner on worker2" для ВМ worker2.
   - Теги: Укажите теги, которые хотите назначить раннеру, разделяя их запятыми.

3. Установка Docker на ВМ worker1 и worker2.
   - Для Ubuntu/Debian:
     
     sudo apt-get install docker.io
     
   - Для CentOS/Fedora:
     
     sudo yum install docker
     
   - Запустите Docker сервис:
     
     sudo service docker start
     

4. Настройка GitLab Runner'а в режиме Docker:
   - Отредактируйте конфигурационный файл GitLab Runner'а на ВМ worker1:
     
     sudo vim /etc/gitlab-runner/config.toml
     
   - Замените секцию [[runners]] наследующего образа на следующий конфиг для запуска раннера в Docker контейнере:
     
     [[runners]]
       name = "Docker Runner on worker1"
       url = "https://your-gitlab-url"
       token = "your-runner-token"
       executor = "docker"
       [runners.docker]
         tls_verify = false
         image = "docker:latest"
         privileged = false
         disable_entrypoint_overwrite = false
         oom_kill_disable = false
         disable_cache = false
         volumes = ["/cache"]
         shm_size = 0
       [runners.cache]
         [runners.cache.s3]
         [runners.cache.gcs]
     
   - Сохраните и закройте файл конфигурации.
   - Повторите шаги для ВМ worker2, заменив имя раннера и другие параметры в файле конфигурации.

5. Перезапустите сервис GitLab Runner'а на ВМ worker1 и worker2:
   
   sudo gitlab-runner restart
   

6. Проверьте подключение раннеров к GitLab:
   - Зайдите на GitLab в веб-интерфейсе и перейдите в раздел "Settings -> CI/CD -> Runners".
   - Там вы должны увидеть два зарегистрированных раннера с соответствующими именами и тегами.

Теперь у вас есть два GitLab Runner'a, подключенных к GitLab и настроенных в режиме Docker на ВМ worker1 и worker2. Они готовы выполнять задачи CI/CD в Docker контейнерах.
